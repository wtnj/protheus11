#include 'ABSENT.CH'
#Include 'rwMake.ch'

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ ABSENT   ³ Autor ³ Alexsandro Pereira    ³ Data ³ 15.05.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Absenteismo                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Absent(void)                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³         ATUALIZACOES SOFRIDAS DESDE A CONSTRU€AO INICIAL.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Programador ³ Data   ³ BOPS ³  Motivo da Alteracao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Mauricio MR ³08/04/02³Acerto³ Correcao de Quebra, Totalizacao/Percent. ³±±
±±³            ³        ³      ³ e Impressao de Totais.                   ³±± 
±±³Mauricio MR ³13/05/02³Acerto³ Considera horas previstas como o total de³±±
±±³            ³        ³      ³ horas trabalhas em cada jornada. Antes so³±±
±±³            ³        ³      ³ consideravamos as horas da 1a jornada.   ³±±
±±³            ³        ³      ³ Ver fHrsPrev().                          ³±±
±±³            ³        ³      ³ Incluida a fSomaExts() que calcula o to- ³±±
±±³            ³        ³      ³ tal de horas extras de acordo com a tabe-³±±
±±³            ³        ³      ³ la de HE correspondente a Filial+Turno.  ³±±
±±³            ³        ³      ³ fSomaHrs somente soma horas nao trabalha-³±±
±±³            ³        ³      ³ das e nao se carrega mais HE a cada que- ³±±
±±³            ³        ³      ³ bra de filial ou turno. Em vez disso uti-³±±   
±±³            ³        ³      ³ lizamos GetTabExtra() para verificar se  ³±±
±±³            ³        ³      ³ em determianda data o Evento apontado con³±±   
±±³            ³        ³      ³ siste em uma HE valida para o dia.       ³±±
±±³Mauricio MR ³17/05/02³Acerto³ Alteracao no Calculo de horas Trabalhadas³±±
±±³            ³        ³      ³ que passa a ser o total previsto menos as³±±
±±³            ³        ³      ³ faltas/atrasos no periodo solicitado.    ³±±
±±³ Priscila R.³10/06/02³------³Ajuste no relatorio para que seja impresso³±± 
±±³            ³--------³------³corretamente o C.C no tamanho 20.         ³±± 
±±³Mauricio MR ³28/08/02³Acerto³ Alteracao para Desconsiderar Dias que Nao³±±
±±³            ³        ³      ³ sejam trabalhados no calculo de horas    ³±±
±±³            ³        ³      ³ Previstas.                               ³±± 
±±³Mauricio MR ³14/11/02³Acerto³A) Alteracao para considerar todos os para³±±
±±³            ³        ³      ³ metros de emissao do relatorio em especi-³±±
±±³            ³        ³      ³ al a situacao e categoria do funcionario.³±± 
±±³            ³        ³      ³B) Alteracao para "NAO ZERAR" horas traba-³±±
±±³            ³        ³      ³ lhadas no periodo se nao existir o aponta³±±
±±³            ³        ³      ³ mento para o periodo.                    ³±± 
±±³Mauricio MR ³04/12/02³------³Retirada a restricao de existencia de cra-³±± 
±±³            ³--------³------³cha para a emissao do relatorio.	      ³±± 
±±³Mauricio MR ³12/12/02³------³Nao permite a data inicial em branco.     ³±± 
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
User Function Absent()
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Locais (Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local cDesc1  := STR0001  // 'Absenteismo'
Local cDesc2  := STR0002  // 'Ser  impresso de acordo com os parametros solicitados pelo'
Local cDesc3  := STR0003  // 'usuario.'
Local cString := 'SRA' //-- Alias do arquivo principal (Base)
Local aOrd    := {STR0004 , STR0005 , STR0006 , STR0007 , STR0030 } // 'Matricula'###'Centro de Custo'###'Nome'###'Turno'###'C.Custo+Nome'
Local wnRel

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis PRIVATE(Basicas)                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private aReturn    := { STR0008 , 1, STR0009 , 2, 2, 1, '',1 } // 'Zebrado'###'Administra‡„o'
Private nomeprog   := 'ABSENT'
Private aLinha     := {}
Private nLastKey   := 0
Private cPerg      := 'ABSENT'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Altera SX1					                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
fTrataSX1(cPerg) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte(cPerg,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis Utilizadas na funcao IMPR                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private Titulo   := OemToAnsi(STR0001 ) // 'Absenteismo'
Private cCabec   := ''
Private AT_PRG   := 'ABSENT'
Private wCabec0  := 1
Private wCabec1  := STR0011  //'Matric Nome                  Periodo  Hrs.Prev.  Hrs.Real     %  (1)Hrs.Adic.     %  (2)Hrs.N.Trab.     %  (3)Hrs.Abonadas     %   '
Private CONTFL   := 1
Private LI       := 0 
Private nTamanho := 'M'

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis Private(Programa)                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Private nOrdem

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Reinicializa as Static do SIGAPON                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PonDestroyStatic()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte('ABSENT',.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
wnrel := 'ABSENT' //-- Nome Default do relatorio em Disco
wnrel := SetPrint(cString,wnrel,cPerg,@Titulo,cDesc1,cDesc2,cDesc3,.F.,aOrd,,nTamanho)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Ordem do Relatorio                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nOrdem     := aReturn[8]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carregando variaveis mv_par?? para Variaveis do Sistema.     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cFilDe     := mv_par01					//Filial De           ?
cFilAte    := mv_par02					//Filial Ate          ?
CcDe       := mv_par03					//Centro de Custo De  ?
CcAte      := mv_par04					//Centro de Custo Ate ?
TurDe      := mv_par05					//Turno De            ?
TurAte     := mv_par06					//Turno Ate           ?
MatDe      := mv_par07					//Matricula De        ?
MatAte     := mv_par08					//Matricula Ate       ?
NomDe      := mv_par09					//Nome De             ?
NomAte     := mv_par10					//Nome Ate            ?
cSit       := mv_par11					//Situacoes a Impr.   ?
cCat       := mv_par12					//Categorias a Impr.  ?
lCC        := If(mv_par13 == 1,.T.,.F.)	//C.C. em Outra Pag.  ? Sim/Nao
dDataDe    := mv_par14					//Data De             ?
dDataAte   := mv_par15					//Data Ate            ?
lSintetico := If(mv_par16 == 1,.F.,.T.)	//Analitico/Sintetico ? Analitico/Sintetico
lDiscri    := If(mv_par17 == 1,.T.,.F.)	//Discrimina Eventos  ? Sim/Nao 

//-- Consiste periodo de impressao do relatorio
If dDataAte<dDataDe .or. Empty(dDataAte) .Or. Empty(dDataDe)
    Help( ''  , 1 , 'NVAZIO' ,OemToAnsi( STR0032 ) ,OemToAnsi( STR0033 ) , 5 , 0 )
	Return Nil
Endif

If	nLastKey == 27
	Return Nil
Endif

SetDefault(aReturn,cString)

If nLastKey == 27
	Return Nil
Endif

cCabec := STR0001+' '+Transf(dDataDe,'@E')+' - '+Transf(dDataAte,'@E')  // 'Absenteismo'

Titulo := OemToAnsi(cCabec)
RptStatus({|lEnd| ABSENTImp(@lEnd,wnRel,cString)},Titulo)

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ABSENTImp ³ Autor ³ Alexsandro Pereira    ³ Data ³ 15.05.00 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Absenteismo                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ ABSENTImp(lEnd,wnRel,cString)                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function ABSENTImp(lEnd,WnRel,cString)

//-- Variaveis Locais
Local cDet         := ''				//-- Linha de detalhe da impressao
Local cSeqAnt      := '  '				//-- Sequencia anterior
Local nX           := 0					//-- Variavel de loop for
Local aAbon        := {}				//-- Itens de abono GERAL
Local aNTra        := {}				//-- Itens de hrs nao trabalhadas GERAL
Local aAdic        := {}				//-- Itens de hrs adicionais GERAL     
Local aCodHeAut    := {}				//-- Codigos de hora extra autorizada
Local aCodAbat     := {}				//-- Codigos de horas nao trabalhadas
Local aTurnos      := {}				//-- Trocas de turno do periodo
Local aPeriodos    := {}				//-- Periodos a imprimir
Local cColuna01    := ''				//-- Detalhe da coluna 1 do relatorio
Local cColuna02    := ''				//-- Detalhe da coluna 2 do relatorio
Local cColuna03    := ''				//-- Detalhe da coluna 3 do relatorio
Local cAlias       := 'SPC'				//-- Alias do arquivo a partir do qual os lancamentos serao lidos
Local nHrsPrev     := 0					//-- Horas previstas
Local nHrsReal     := 0					//-- Horas reais
Local nHrsTrabPer  := 0					//-- Horas Trabalhadas no Periodo Solicitado
Local nPReal       := 0					//-- Percentual horas reais
Local nHrsAdic     := 0					//-- Horas adicionais
Local nPAdic       := 0					//-- Percentual horas adicionais
Local nHrsnTra     := 0					//-- Horas nao trabalhadas
Local nPNTra       := 0					//-- Percentual horas nao trabalhadas
Local nHrsAbon     := 0					//-- Horas abonadas
Local nPAbo        := 0					//-- Percentual horas abonadas
Local dPerIni      := Ctod("  /  /  ")	//-- Data de inicio do periodo
Local dPerFim      := Ctod("  /  /  ")	//-- Data fim do periodo
Local cAcessaSRA   := &("{ || " + ChkRH("ABSENT","SRA","2") + "}")

Private cFilAnte   := ''				//-- Filial anterior
Private cFilRegra  := ''				//-- Filial para uso na consulta do arquivo Regra
Private cTnoAnt    := ''				//-- Turno anterior
Private cCcAnt     := ''				//-- Centro de custo anterior
Private aTabPadrao := {}				//-- Tabela de horario padrao
Private aTabCalend := {}				//-- Calendario de trabalho
Private aAdicT     := {}					//-- Totalizador hrs adicionais turno
Private aNTraT     := {}					//-- Totalizador hrs nao trab. turno
Private aAbonT     := {}					//-- Totalizador hrs abonadas turno
Private aAdicC     := {}					//-- Totalizador hrs adicionais centro de custo
Private aNTraC     := {}					//-- Totalizador hrs nao trabalhadas centro de custo
Private aAbonC     := {}					//-- Totalizador hrs abonadas centro de custo
Private aAdicF     := {}					//-- Totalizador hrs adicionais filial
Private aNTraF     := {}					//-- Totalizador hrs nao trabalhadas filial
Private aAbonF     := {}					//-- Totalizador hrs abonadas filial
Private aAdicE     := {}					//-- Totalizador hrs adicionais empresa
Private aNTraE     := {}					//-- Totalizador hrs nao trabalhadas empresa
Private aAbonE     := {}					//-- Totalizador hrs abonadas empresa
Private aTotalF    := {}
Private aTotalE    := {}
Private aTotalC    := {}
Private aTotalT    := {}  
Private aInfo      := {} 
Private lPrimVez   := .T.

//-- Define o periodo de apura‡„o, de acordo com MV_PAPONTA
If !PerAponta(@dPerIni,@dPerFim)
	HELP(' ',1,'PERNCAD')
	Return Nil
Endif

//-- aPeriodos
//-- [n,1] - data inicio do periodo.
//-- [n,2] - data termino do periodo.
//-- [n,3] - data inicio do acumulo dos dados dentro do periodo.
//-- [n,4] - data fim do acumulo dos dados dentro do periodo.

//-- Identifica os periodos a serem impressos e armazena em aPeriodos
If Len((aPeriodos := Monta_Per(dDataDe,dDataAte))) == 0
	HELP(' ',1,'PERNCAD')
	Return Nil
Endif

//-- Carga da tabela de horario padrao
If !fTabTurno(aTabPadrao)
	Help(' ',1,'TPADNCAD')
	Return Nil
EndIf

//-- Posiciona registro inicial de acordo com de/ate
dbSelectArea('SRA')
dbGoTop()
dbSetOrder(nOrdem)
If nOrdem == 1
	dbSeek(cFilDe + MatDe,.T.)
	cInicio := 'SRA->RA_FILIAL + SRA->RA_MAT'
	cFim    := cFilAte + MatAte
ElseIf nOrdem == 2
	dbSeek(cFilDe + CcDe + MatDe,.T.)
	cInicio := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_MAT'
	cFim    := cFilAte + CcAte + MatAte
ElseIf nOrdem == 3
	dbSeek(cFilDe + NomDe + MatDe,.T.)
	cInicio := 'SRA->RA_FILIAL + SRA->RA_NOME + SRA->RA_MAT'
	cFim    := cFilAte + NomAte + MatAte
ElseIf nOrdem == 4
	dbSeek(cFilDe + TurDe,.T.)
	cInicio := 'SRA->RA_FILIAL + SRA->RA_TNOTRAB'
	cFim    := cFilAte + TurAte
ElseIf nOrdem == 5
	dbSetOrder(8)
	dbSeek(cFilDe + CcDe + NomDe,.T.)
	cInicio  := 'SRA->RA_FILIAL + SRA->RA_CC + SRA->RA_NOME'
	cFim     := cFilAte + CcAte + NomAte
Endif

//-- Inicializa Variavel Static
GetTrbFer()

//-- Inicializa regua de processamento
SetRegua(SRA->(RecCount()))

cFilAnte     := "@@"
cCcAnt       := "@@@@@@@@@"
cTnoAnt      := "@@@"
lImprTitulo	 := .T.

While SRA->(!Eof()) .And. &cInicio <= cFim

	//-- Incrementa regua de processamento
	IncRegua()

	//-- Cancelamento de impressao pelo usuario
	If lEnd
		Impr(cCancela,'C')
		Exit
	EndIF

	//-- Processa a Quebra de Filial
	If SRA->RA_FILIAL # cFilAnte
		If cFilAnte # "@@"
				fImpFil()    // Totaliza Filial
	   	Endif                    
		cFilAnte   	:= SRA->RA_FILIAL 
		cCcAnt  	:= SRA->RA_Cc
		//-- Dados da empresa/filial
		If !fInfo(@aInfo,SRA->RA_FILIAL)
			Exit
		Endif
	
		//-- Carrega os codigos de horas nao trabalhadas
		fCarCodAbat(@aCodAbat)                     
        cFilRegra:= fFilFunc("SPA")
	Endif

	//-- Processa a Quebra de Turno
	If cTnoAnt+cSeqAnt # SRA->RA_TNOTRAB+SRA->RA_SEQTURN  
		cSeqAnt := SRA->RA_SEQTURN
		cTnoAnt := SRA->RA_TNOTRAB	
		
		//-- Carrega os codigos de horas nao trabalhadas
		fCarCodAbat(@aCodAbat)                  
	Endif

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Consiste controle de acessos e filiais validas               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SRA->RA_FILIAL $ fValidFil()) .Or. !Eval(cAcessaSRA)
	    fCabTotal()
		Loop
	EndIf

	//-- Consiste Parametrizacao do Intervalo de Impressao
	If (SRA->RA_DEMISSA 	< dPerIni 	.And. !Empty(SRA->RA_DEMISSA)) 	.Or. ;
		(SRA->RA_TNOTRAB 	< TurDe) 	.Or. (SRA->RA_TNOTRAB 	> TurAte) 	.Or. ;
		(SRA->RA_NOME 		< NomDe) 	.Or. (SRA->RA_NOME 		> NomAte) 	.Or. ;
		(SRA->RA_MAT 		< MatDe) 	.Or. (SRA->RA_MAT 		> MatAte) 	.Or. ;
		(SRA->RA_CC 		< CcDe) 	.Or. (SRA->RA_CC 		> CCAte) 	.Or. ;   
		!(SRA->RA_SITFOLH 	$ cSit) 	.Or. !(SRA->RA_CATFUNC 	$ cCat) 
		fCabTotal()
		Loop
	Endif
	
	//-- Monta o Array aImp com as ocorrˆncias do per¡odo
	aImp := {}

	For nX := 1 To Len(aPeriodos)
	
		
		cSeqTurn := '**'

		//-- Chamada a fTrocaTno() para identificar o turno correto a ser passado para retseq.
		fTrocaTno(aPeriodos[nX,1], aPeriodos[nX,2], @aTurnos)

		cSeqTurn := SRA->RA_SEQTURN
		cTno     := If(Len(aTurnos)==0,SRA->RA_TNOTRAB,aTurnos[1,1])

		//-- Se periodo for anterior ao atual arquivo de trabalho sera SPH
		If aPeriodos[nX,1] >= dPerIni .And. aPeriodos[nX,2] <= dPerFim
			cAlias := 'SPC'
		Else

			cAlias := 'SPH'
		Endif

		//-- Monta calendario com horarios de trabalho
		If !CriaCalend( aPeriodos[nX,1],aPeriodos[nX,2],cTno,cSeqTurn,aTabPadrao,@aTabCalend,SRA->RA_FILIAL,SRA->RA_MAT,SRA->RA_CC,@aTurnos)
			Loop
		EndIf
        //-- Carrega Arrays com total de horas por Evento, retornando o total geral de horas  
        //-- para cada 1 dos 4 tipos de eventos verificados
        nHrsTrabPer:=0 //-- Inicializa sempre as horas previstas para o periodo
		//-- Apura as horas trabalhadas a partir do calendario de trabalho
		nHrsPrev := fHrsPrev(aTabCalend,@nHrsTrabPer,aPeriodos[nX,3],aPeriodos[nX,4])
		//-- Apura as horas adicionais a partir do SPC e/ou SPH
		nHrsAdic := fSomaExts(@aCodHeAut,@aAdic,aPeriodos[nX,3],aPeriodos[nX,4],cAlias)
		//-- Apura as horas nao trabalhadas a partir do SPC e/ou SPH
		nHrsnTra := fSomaHrs(aCodAbat,@aNTra,aPeriodos[nX,3],aPeriodos[nX,4],cAlias)
		//-- Apura as horas abonadas
		nHrsAbon := fHrsAbon(aPeriodos[nX,3],aPeriodos[nX,4],@aAbon)

		//-- Apura as horas efetivamente trabalhasdas ( previstas - nao trab )
		nHrsReal := SubHoras(nHrsTrabPer,nHrsnTra)
		nHrsReal := If(nHrsReal < 0.00, 0.00, nHrsReal)
		//-- Percentual de horas reais x previstas
		nPReal   := (fConvHr(nHrsReal,'D') / fConvHr(nHrsPrev,'D')) * 100
		//-- Percentual de horas extras x previstas
		nPAdic   := (fConvHr(nHrsAdic,'D') / fConvHr(nHrsPrev,'D')) * 100
		//-- Percentual de horas nao trabalhadas x previstas
		nPNTra   := (fConvHr(nHrsnTra,'D') / fConvHr(nHrsPrev,'D')) * 100
		//-- Percentual de horas abonadas x horas nao trabalhadas
		nPAbo    := (fConvHr(nHrsAbon,'D') / fConvHr(nHrsnTra,'D')) * 100

		//-- Monta array de impressao
		If ! lSintetico
		  	AAdd(aImp, If(nX==1,SRA->RA_MAT+Space(01)+Left(SRA->RA_NOME,20),Space(27))+'  '+StrZero(Month(aPeriodos[nX,2]),2)+'/'+Transf(Year(aPeriodos[nX,2]),'9999')+'  '+Transf(nHrsPrev, "@E 999.99")+;
			Space(05)+Transf(nHrsReal, "@E 999.99")+Space(02)+Transf(nPReal,"@E 999.99")+;
			Space(03)+Transf(nHrsAdic, "@E 999.99")+Space(05)+Transf(nPAdic,"@E 999.99")+;
			Space(05)+Transf(nHrsnTra, "@E 999.99")+Space(05)+Transf(nPNTra, "@E 999.99")+;
			Space(05)+Transf(nHrsAbon, "@E 999.99")+Space(06)+Transf(nPAbo, "@E 999.99"))
		Endif

		//-- Acumula os totais do Periodo por : filial/centro de custo/turno
        fTotLinPer({@aTotalF,@aTotalC,@aTotalT,@aTotalE}	,nHrsPrev,nHrsReal,nHrsAdic,nHrsnTra,nHrsAbon,aPeriodos[nX,2],nPReal, nPAdic, nPnTra, nPAbo)
	Next nX
              
    
    If !lSintetico
		//-- Espacamento de uma linha apos a linha de informacoes
		AAdd(aImp, '*')
    Endif
    
	//-- Emite resumo com a dicriminacao das horas
	nX := 0
	If lDiscri .And. !lSintetico .And. (Len(aAdic)+Len(aNTra)+Len(aAbon)) > 0
	  //	AAdd(aImp, STR0010) //'(1) Descricao                  Horas      % (2) Descricao                  Horas      %  (3) Descricao                  Horas      %'
		//-- Calcula Percentuais
		fCalcPerc(@aAdic)
		fCalcPerc(@aNTra)
		fCalcPerc(@aAbon)
		For nX := 1 To Max(Max(Len(aAdic), Len(aNTra)),Len(aAbon))
			cColuna01 := If(nX<=Len(aAdic),aAdic[nX,1]+Space(01)+Left(aAdic[nX,2],20)+Space(01)+Transf(aAdic[nX,3],"@E 9999.99")+Space(01)+Transf(aAdic[nX,4],"@E 999.99"),Space(39))
			cColuna02 := If(nX<=Len(aNTra),aNTra[nX,1]+Space(01)+Left(aNTra[nX,2],20)+Space(01)+Transf(aNTra[nX,3],"@E 9999.99")+Space(01)+Transf(aNTra[nX,4],"@E 999.99"),Space(39))
			cColuna03 := If(nX<=Len(aAbon),aAbon[nX,1]+Space(01)+Left(aAbon[nX,2],20)+Space(01)+Transf(aAbon[nX,3],"@E 9999.99")+Space(01)+Transf(aAbon[nX,4],"@E 999.99"),Space(39))
			AAdd(aImp, Space(04)+cColuna01+Space(05)+cColuna02+Space(06)+cColuna03)
		Next nX
	Endif
    
    //-- Totaliza os Array de Eventos aos Acumuladores: Filial,CC,Turno e Empresa
    fTot(aAdic,{@aAdicF,@aAdicC,@aAdicT,@aAdicE})
    fTot(aNTra,{@aNTraF,@aNTraC,@aNTraT,@aNTraE})
    fTot(aAbon,{@aAbonF,@aAbonC,@aAbonT,@aAbonE})
	
	//-- Reinicializa variaveis de lancamentos
	aAdic := {}
	aNTra := {}
	aAbon := {}

	If Len(aImp) == 0 
		fCabTotal()
		Loop
	Endif
    
    If !lSintetico
    	//-- Imprime funcionario Percentuais e Eventos                                         ³
  		fImpFun(@aImp)
    Endif
        
	//-- Verifica QUEBRA
	//-- Imprime cabecalho e Totais de Acumuladores: Filial/CC/Turno/Empresa
	fCabTotal()

EndDo     

//-- Destroi Variavel Static
GetTrbFer()

dbSelectArea("SRA")
dbSetOrder(1)

Set Device To Screen
If aReturn[5] == 1
	Set Printer To
	Commit
	OurSpool(wnrel)
Endif
MS_FLUSH()

*---------------------------*
Static Function fCabTotal()
*---------------------------*

cCcAnt  := SRA->RA_Cc
cTnoAnt := SRA->RA_TNOTRAB
cFilAnte := SRA->RA_FILIAL
dbSelectArea( "SRA" )
SRA->( dbSkip() )
If	Eof() .Or. &cInicio > cFim
	fImpCc()
	fImpFil()
	fImpEmp()
Elseif cFilAnte # SRA->RA_Filial
	fImpCc()
	fImpFil()
Elseif (cCcAnt # SRA->RA_Cc .AND. (nOrdem == 2 .OR. nOrdem == 5)) .Or. ;                              
       (cTnoAnt # SRA->RA_TNOTRAB  .AND. nOrdem == 4) .And. !Eof()
	fImpCc()
Endif
Return Nil

*---------------------*
Static Function fImpFun(aImp)     // Imprime um Funcionario
*---------------------*

fImprime(aImp,1) 		//Imprime Total Funcionario

aImp := {}         		//Zera Total do Funcionario

Return Nil
                   
*--------------------*
Static Function fImpCc 	// Imprime Centro de Custo
*--------------------*

If nOrdem ==  2 .Or. nOrdem == 5
   If Len(aTotalC) == 0 
   	  Return Nil
   Endif 
   fImprime({},2) 		// Imprime Identificacao C.Custo
  
ElseIf nOrdem == 4 
    If Len(aTotalT) == 0 
   	   Return Nil
    Endif 
    fImprime({},4) 		// Imprime Identificacao  Turno
 
Endif


Return Nil

*---------------------*
Static Function fImpFil // Imprime Filial
*---------------------*
If  Len(aTotalF) == 0 
	Return Nil
Endif

fImprime({},3) 			//Imprime Identificacao

Return Nil

*---------------------*
Static Function fImpEmp // Imprime Empresa
*---------------------*
If Len(aTotalE) == 0 
	Return Nil
Endif

fImprime({},0) 			//Imprime Identificacao

Return Nil


*-----------------------------------------------*
Static Function fImprime(aFun,nTipo)
*-----------------------------------------------*
// nTipo: 1- Funcionario
//        2- Centro de Custo
//        3- Filial
//        4- Turno


Local nPre   	:= 0 
Local lCabEve	:=.F.  
Local lJaPrtEve	:=.F.
Local naFun		:= 0

//-- Imprime Identificacao se lImprTitulo .T. 
//-- Desconsidera se for imprimir Total da Empresa e de Filial
//-- Desconsidera se for Sintetico
If lImprTitulo .AND. nTipo<> 0 .and. nTipo<>3   .AND. !lSintetico
   	If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
	   fImprCab(nOrdem,,"C",.T.)
	Else
	   fImprCab(3,,"P",.T.)
	Endif	  	
   lImprTitulo:=.F.		//-- Desabilita a Impressao de Cabec de Identificacao
Endif  

If nTipo == 1 .And. !lSintetico   
    naFun:=Len(aFun)
	For nPre := 1 to naFun          
	    //-- Se os proximos elementos forem Eventos 
		If aFun[nPre]=="*"  
		   //-- Se Existirem Eventos a Imprimir
		   If  nPre<naFun 
		       //-- "Liga" a impressao de SubCab
		       lCabEve		:=.T.
		       lJaPrtEve	:=.T. 
		       aFun[nPre]	:=""  
		   Else
		   	   //-- Nao Imprime "" (Linha em Branco) pois nao ha eventos para Print
		   	   Loop
		   Endif 
		      
		Endif
	    If Li>52 
	       //-- Se, por exemplo, Li=57 , forca a quebra de pag
	       //-- para que o subcabec seja impresso com os totais
	       //-- Verifica a Ordem para Imprimir a Identificacao do Tipo de Relatorio
    	   If nOrdem == 2	.Or. nOrdem == 4 .Or. nOrdem == 5 // - Centro de Custo ou Turno de Trab
			   fImprCab(nOrdem,,"P",.T.)
		   Else
			   fImprCab(3,,"P",.T.)
		   Endif                          
		   //-- Se Jah houve impressao de algum evento forca a impressao do SubCab
		   lCabEve:=If(lJaPrtEve,.T.,.F.)
		Endif                                 
		
		//-- Impressao de Descricao de Eventos
		If lCabEve
		   cDet := STR0010 //'(1) Descricao                  Horas      % (2) Descricao                  Horas      %  (3) Descricao                  Horas      %'
		   Impr(cDet,'C')  
		   
		   lCabEve:=.F.
		Endif		
		fImprCab(1,aFun[nPre])
	Next nPre
	fImprCab(1,Replicate("-",132))

ElseIf nTipo == 2	// Salta pagina a cada Centro de Custo
	If lCC 
		fImprCab(2,,"P")
	Endif  
    //-- Imprime Totais
    fTotais(2)

ElseIf nTipo == 3	// Salta pagina a cada Filial
	fTotais(3)

ElseIf nTipo == 4	// Salta pagina a cada Turno
	fTotais(4) 

ElseIf nTipo == 0	// Total Empresa
	fTotais(0)	
Endif

//-- Salta de Pagina
if nTipo == 2 
	If lCC          //-- Se imprime C.Custo e Deseja-se C.Custo em Outra Pagina
		Impr("","P")
	Endif 
	lImprTitulo:=.T. 
Elseif nTipo == 3  //-- A Cada Filial
		Impr("","P")
		lImprTitulo:=.T.   	//-- Liga Impressao da Identificacao da Filial na Pag.Seguinte
							//-- Proxima Impressao de Funcionario
Elseif nTipo == 4  //-- A Cada Turno
	   lImprTitulo:=.T.   	//-- Liga Impressao da Identificacao da Filial na Pag.Seguinte
							//-- Proxima Impressao de Funcionario
Endif
Return Nil

*-----------------------------------------------*
Static Function fImprCab(nTipo,Det,cPara,lAtual)
*-----------------------------------------------*
// nTipo: 1		 - Funcionario
//        2 ou 5 - Centro de Custo 
//		  3		 - Filial                  
//        4		 - Turno
//		  0		 - Empresa  

// Det : Linha Detalhe do Funcionario

Local cDet:=""


nTipo := If(nTipo==NIL,0,nTipo)
cPara := If(cPara==Nil,"C",cPara)
//-- Se lAtual .T. Imprime Filial/C.Custo/Turno do funcionario
//-- que nao nao foram colocados nas variaveis verificadoras de quebra
lAtual:= If(lAtual==NIL,.F.,.T.)
								
If Li >52 .Or. cPara == "P" 
	Impr("","P")
Endif  
  
//-- Para Tipos de Impressao Diferentes de Funcionario
//-- Imprime o Cabec Identificacao
If nTipo <> 1 
	if (nTipo == 2 .OR. nTipo == 5) .and. (nOrdem == 2 .Or. nOrdem == 5)
	   	If !lAtual
	   	   	cDet:= STR0027+cFilAnte+Space(2)+STR0030+cCcAnt+' - '+DescCc(cCcAnt,cFilAnte)		//"Filial: "###"  C.C: "
	   	Else
			cDet:= STR0027+SRA->RA_FILIAL+Space(2)+STR0030+SUBS(SRA->RA_CC+SPACE(20),1,20)+' - '+DescCc(SRA->RA_CC,SRA->RA_FILIAL,30)		//"Filial: "###"  C.C: "
	   	Endif   
	Elseif nTipo == 3
		If !lAtual
	   		cDet:= STR0027+cFilAnte+" - "+aInfo[1]		//"Filial: "
	   	Else                                                        
	   	   	fInfo(@aInfo,SRA->RA_FILIAL)
	   		cDet:= STR0027+SRA->RA_FILIAL+" - "+aInfo[1]		//"Filial: "
	   		fInfo(@aInfo,cFilAnte)
	   	Endif	
	Elseif nTipo == 4
	   	If !lAtual
	   		cDet:= STR0027+cFilAnte+STR0014+cTnoAnt+' - '+FDescTno(cFilAnte,cTnoAnt)		//"Filial: "###" Turno: "
   		Else
   			cDet:= STR0027+SRA->RA_FILIAL+STR0014+cTnoAnt+' - '+FDescTno(SRA->RA_FILIAL,cTnoAnt)		//"Filial: "###" Turno: "
	   	Endif	
	Elseif nTipo == 0
	    	cDet:= STR0018 + Sm0->m0_Nomecom // "Empresa: "
	Endif
	IMPR(cDet,"C")  

	If !lSintetico
	   IMPR(Repl("-",132),"C")
	Endif
Endif

//-- Imprime Linha Detalhe quando Funcionario
If nTipo == 1 .And. Det<>Nil
	Impr(Det,"C")
Endif

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fTotais  ³ Autor ³ MauricioMR            ³ Data ³04/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Define Impressao de Totais e Zera Acumuladores             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fTotais(nTipo)                                             ³±±
±±³          ³ nTotais(nTipo)                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nTipo --> 3 ou 1 Total de Filial                           ³±±
±±³          ³           2 ou 5 Centro de Custo                           ³±±
±±³          ³           4      Turno                                     ³±±
±±³          ³           0      Empresa                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fTotais(nTipo)
Local clinTot	 := ''


If nTipo == 3 .Or. nTipo == 1 //-- Filial 
   	cLinTot := STR0015+cFilAnte+' - '+aInfo[1] //'TOTAIS PARA A FILIAL '
   	fImpTot(@aTotalF,clinTot,@aAdicF,@aNTraF,@aAbonF)

ElseIf nTipo == 2  //-- Centro de custo + Filial
   	cLinTot:= STR0020+cCcAnt+' - '+Alltrim(DescCc(cCcAnt,cFilAnte))+' - '+STR0027+cFilAnte //'TOTAIS PARA O CENTRO DE CUSTO '  
   	fImpTot(@aTotalC,clinTot,@aAdicC,@aNTraC,@aAbonC)

ElseIf nTipo == 4 //-- Turno de trabalho +Filial
	cLinTot:= STR0019+cTnoAnt+' - '+Alltrim(fDescTno(cFilAnte,cTnoAnt))+' - '+STR0027+cFilAnte //'TOTAIS PARA O TURNO '
   	fImpTot(@aTotalT,clinTot,@aAdicT,@aNTraT,@aAbonT)

ElseIf nTipo == 0 //-- Empresa
	cLinTot:= cDet := STR0018+aInfo[3] //'TOTAIS PARA A EMPRESA '	
   	fImpTot(@aTotalE,clinTot,@aAdicE,@aNTraE,@aAbonE)

Endif
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fImpTot   ³ Autor ³ Mauricio MR           ³ Data ³04/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Imprime Totais dos Acumuladores                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fImpTot(aTot,cLintot,aAdic,aNTra,aAbon)                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³aTot  --> Array com os Acumuladores dos Periodos:Fil,CC,... ³±±
±±³          ³cLinTot-> String com a Descricao do Total especifico        ³±±
±±³          ³aAdic  -> Array de Adicionais dos Acumuladores  especificos ³±±
±±³          ³aNtra  -> Array de Hor.Nao Trab. Acumuladas especificas     ³±±
±±³          ³aAbon  -> Array de Abonos Acumulados especificos            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/

Static Function fImpTot(aTot,clinTot,aAdicTot,aNTraTot,aAbonTot)
Local cColuna01  := ''
Local cColuna02  := ''
Local cColuna03  := ''
Local cDet       := ''
Local nX         := 0
Local nElementos := 0
Local naTot:=Len(aTot)
 
For nX := 1 To naTot
	//Imprime SubCabec Na 1a Vez ou sempre que o acumulado for impresso na pag. seguinte
	If nX == 1  .OR. Li>52 
	    If Li>52         	//-- Se, por exemplo, Li=57 , forca a quebra de pag
	       IMpr('','P')  	//-- para que o subcabec seja impresso com os totais
	    Endif   
		Impr(cLinTot,'C')
		Impr('','C')
		cDet := STR0016 //'Periodo     Hrs.Prev.     Hrs.Real       % (1)Hrs.Adic.      % (2)Hrs.N.Trab.      % (3)Hrs.Abonadas      %'
		//                 99/9999  9,999,999.99 9,999,999.99  999.99 9,999,999.99 999.99   9,999,999.99 999.99    9,999,999.99 999.99
		Impr(cDet,'C')
	Endif

	cDet := aTot[nX,1]+'  '+Transf(aTot[nX,2], "@E 9,999,999.99")+;
	Space(01)+Transf(aTot[nX,3], "@E 9,999,999.99")+Space(02)+Transf(aTot[nX,04],"@E 999.99")+;
	Space(01)+Transf(aTot[nX,5], "@E 9,999,999.99")+Space(01)+Transf(aTot[nX,06],"@E 999.99")+;
	Space(03)+Transf(aTot[nX,7], "@E 9,999,999.99")+Space(01)+Transf(aTot[nX,08], "@E 999.99")+;
	Space(04)+Transf(aTot[nX,9], "@E 9,999,999.99")+Space(01)+Transf(aTot[nX,10], "@E 999.99")
	Impr(cDet,'C')
Next nX

//-- Quando nao houver totais nao emite corpo totalizador
If (nElementos := Max(Max(Len(aAdicTot),Len(aNTraTot)),Len(aAbonTot))) > 0

	//-- Imprime totalizador dos itens
	For nX := 1 To nElementos
		//Imprime SubCabec Na 1a Vez ou sempre que o evento for impresso na pag. seguinte
		If nX == 1  .OR. Li>52 
		   	If Li>52         	//-- Se, por exemplo, Li=57 , forca a quebra de pag
	       		IMpr('','P')  	//-- para que o subcabec seja impresso com os totais
	    	Endif   
			Impr('','C')
			cDet := STR0017 //'(1) Descricao                  Horas      % (2) Descricao                  Horas      %  (3) Descricao                  Horas      %'
			Impr(cDet,'C')	
		Endif
		cColuna01 := If(nX<=Len(aAdicTot),aAdicTot[nX,1]+Space(01)+Left(aAdicTot[nX,2],20)+Space(01)+Transf(aAdicTot[nX,3],"@E 9999.99")+Space(01)+Transf(aAdicTot[nX,4],"@E 999.99"),Space(39))
		cColuna02 := If(nX<=Len(aNTraTot),aNTraTot[nX,1]+Space(01)+Left(aNTraTot[nX,2],20)+Space(01)+Transf(aNTraTot[nX,3],"@E 9999.99")+Space(01)+Transf(aNTraTot[nX,4],"@E 999.99"),Space(39))
		cColuna03 := If(nX<=Len(aAbonTot),aAbonTot[nX,1]+Space(01)+Left(aAbonTot[nX,2],20)+Space(01)+Transf(aAbonTot[nX,3],"@E 9999.99")+Space(01)+Transf(aAbonTot[nX,4],"@E 999.99"),Space(39))
	
		cDet := Space(04)+cColuna01+Space(05)+cColuna02+Space(06)+cColuna03
	
		Impr(cDet,'C')
	Next nX
Endif

Impr(Replic('*',132),'C')	


//-- Zera Totais Especificos
aTot   	  := {}
aAdicTot  := {}
aNTraTot  := {}
aAbonTot  := {}
Return



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fCarCodAbat³ Autor ³ Alexsandro Pereira    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fCarCodAbat(aCodAbat)

If SP9->(dbSeek(fFilFunc('SP9')))
	Do While ! SP9->(Eof()) .And. SP9->P9_FILIAL == fFilFunc('SP9')
		If SP9->P9_TIPOCOD = "2" //Evento de Desconto
			Aadd(aCodAbat, SP9->P9_CODIGO)
		Endif
		SP9->(dbSkip())
	Enddo
Endif
Return Nil


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fHrsPrev ³ Autor ³ Alexsandro Pereira    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fHrsPrev(aTabCalend,nHrsTrabPer,dPerIni,dPerfim)

Local nHrsPrev := 0
Local nX       := 0
Local dData    := 0
Local cTipodia 		:= ''        
Local lTrbFeriado	:=.F.
Local cFRegra		:= ''

For nX := 1 To Len(aTabCalend)

	dData := aTabCalend[nX,1]      
	                                          
    //-- Nao conta as horas da tabela em dias de afastamento
	If fAfasta(SRA->RA_FILIAL,SRA->RA_MAT,dData)
		If (nX := Ascan(aTabCalend, { |x| x[1] == dData + 1 })) > 0
			Loop
		Else
			Exit
		Endif
	Endif                      
    //-- Verifica se funcionario Trabalha em Feriado
    If cfRegra <> (cFilRegra + aTabCalend[ nX , 23 ] )
       cFRegra:=cFilRegra + aTabCalend[ nX , 23 ] 
       lTrbFeriado	:=GetTrbFer( cFilRegra + aTabCalend[ nX , 23 ] )
	Endif

    // *** Verifica Tipo Dia ***
    //-- Se Feriado 
         //-- Se Excecao
              //Tipo Dia
         //--Senao Excecao     
	         //-- Se NaoTrabalha Feriado
	         //   Tipo dia  = "Feriado"
	         //---Senao NaoTrabalha Feriado
	         //   Tipo dia     
	         //-- Fim se Nao Trabalha Feriado
         //-- Fim se Escecao
    //Senao
    //   Tipo Dia
    //-- Fim se Feriado
    
	cTipoDia	:= IF( aTabCalend[ nX , 19 ] , IF(  aTabCalend[ nX , 10 ]  == "E" , aTabCalend[ nX , 06 ] , IF(!lTrbFeriado,"F",aTabCalend[ nX , 06 ] ) ) , aTabCalend[ nX , 06 ] )                  
    
    //-- Descarta as Horas da Tabela para Dias diferentes de Trabalhado
    If cTipoDia !='S'                                                 
       Loop
    Endif

	//-- Verifica o total de horas trabalhadas da jornada
	If !Empty(aTabCalend[nX,7])
		nHrsPrev := SomaHoras(nHrsPrev,aTabCalend[nX,7])
		//-- Calcula o Total de Horas Previstas para o Periodo solicitado (que podera ser parcial
		//-- em relacao ao periodo de apontamento do periodo corrente
		If (dData >= dPerIni .AND. dData <= dPerFim)
       		nHrsTrabPer:=SomaHoras(nHrsTrabPer,aTabCalend[nX,7])
    	Endif  
	Endif

Next nX
Return nHrsPrev

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³GetTrbFer  ³ Autor ³ Equipe RH             ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna  .T. se Trabalha .F. senao.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ GetTrbFer(cFil, cRegra)                                     ³±± 
±±³          ³ cFil   -> Filial para Consulta da Regra em SPA              ³±±
±±³          ³ cRegra -> Regra a ser Pesquisada                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Absent                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function GetTrbFer( cFil, cRegra )

Local aArea			:= {}
Local aAreaSPA		:= {}
Local baScan		:= { || .T. }
Local lTrbFeriado	:= .F.

Local nPos			:= 0.00

Static aTabRegra

IF PCount() == 0.00

	aTabRegra := NIL

Else

 	cFil		:= If(cFil   == Nil, fFilFunc("SPA"), cFil		)
 	cRegra		:= If(cRegra == Nil, SRA->RA_REGRA  , cRegra	)
	
	aTabRegra   := If(aTabRegra == Nil, {}, aTabRegra			)
	
	baScan		:= { |x| ( x[1] == cFil .or. Empty( x[1] ) )	;
						  .and.									;
						 ( x[2] == cRegra .or. Empty( x[2] ) )    ;
				   }

	
	//-- Verifica se a Regra Nao foi Lida Ainda
	IF ( nPos := aScan( aTabRegra , baScan ) ) == 0.00 
        
        //-- Procura Nova Regra
		aArea		:= GetArea()
		aAreaSPA	:= SPA->( GetArea() )
	
	    If ( SPA->( dbSeek( cFil + cRegra ) ) )
			aAdd( aTabRegra , { cFil , cRegra , SPA->PA_FERIADO} )
		    nPos:=Len(aTabRegra)
		Endif
		
		RestArea( aAreaSPA )
		RestArea(  aArea   )

	EndIF
	 //-- Verifica se funcionario Trabalha em Feriado
	lTrbFeriado	:= (aTabRegra[nPos,3] == 'S')
EndIF

Return( lTrbFeriado )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fSomaHrs ³ Autor ³ Alexsandro Pereira    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fSomaHrs(aCodigos,aColuna,dPerIni,dPerFim,cAlias)

Local nX      	:= 0
Local nHoras  	:= 0 
Local nPos	  	:= 0

cPD     := cAlias+'->'+Right(cAlias,2)+'_PD'		//-- Campo codigo de evento
cFil    := cAlias+'->'+Right(cAlias,2)+'_FILIAL'	//-- Campo codigo da filial
cMat    := cAlias+'->'+Right(cAlias,2)+'_MAT'		//-- Campo matricula
cPDI    := cAlias+'->'+Right(cAlias,2)+'_PDI'		//-- Campo codigo de evento informado
cPD     := cAlias+'->'+Right(cAlias,2)+'_PD'		//-- Campo codigo de evento gerado
cData   := cAlias+'->'+Right(cAlias,2)+'_DATA'		//-- Campo data de referencia do lancamento
cQuantc := cAlias+'->'+Right(cAlias,2)+'_QUANTC'	//-- Campo quantidade de horas calculadas
cQuanti := cAlias+'->'+Right(cAlias,2)+'_QUANTI'	//-- Campo quantidade de horas informadas

dbSelectArea(cAlias)
If dbSeek(fFilFunc(cAlias)+SRA->RA_MAT)

	Do While &cFil + &cMat == SRA->RA_FILIAL + SRA->RA_MAT
	    //-- Desconsidera Apontamentos fora do Periodo solicitado
	    If &cData < dPerIni .Or. &cData > dPerFim
			(cAlias)->( dbSkip() )
			Loop
		Endif
    
		cEvento := If(Empty(&cPDI),&cPD,&cPDI)

		If Ascan(aCodigos, cEvento) == 0
			(cAlias)->( dbSkip() )
			Loop
		Endif

	    //-- Obtem as horas do Evento
		nQuant := If(Empty(&cPDI),&cQuantc,&cQuanti)
                                          
		
        //-- Acumula Total de Horas de Todos os Eventos
		nHoras := SomaHoras(nHoras, nQuant)
        
        //-- Acrescenta o Eventos ou Acumula horas do Evento para Array GERAL
		If Len(aColuna) > 0 .And. (nPos := Ascan(aColuna, { |x| x[1] == cEvento })) > 0
			aColuna[nPos,3] := SomaHoras(aColuna[nPos,3], nQuant)
		Else
			Aadd(aColuna, { cEvento, DescPDPon(cEvento), nQuant, 0 })
		Endif

		(cAlias)->( dbSkip() )
	Enddo
Endif

//-- Retorna o Total de Horas do Periodo
Return nHoras 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fSomaExts³ Autor ³ Mauricio Mr           ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fSomaExts(aCodigos,aColuna,dPerIni,dPerFim,cAlias)

Local nX      := 0
Local nHoras  := 0 
Local nPos	  :=0

cPD     := cAlias+'->'+Right(cAlias,2)+'_PD'		//-- Campo codigo de evento
cFil    := cAlias+'->'+Right(cAlias,2)+'_FILIAL'	//-- Campo codigo da filial
cMat    := cAlias+'->'+Right(cAlias,2)+'_MAT'		//-- Campo matricula
cPDI    := cAlias+'->'+Right(cAlias,2)+'_PDI'		//-- Campo codigo de evento informado
cPD     := cAlias+'->'+Right(cAlias,2)+'_PD'		//-- Campo codigo de evento gerado
cData   := cAlias+'->'+Right(cAlias,2)+'_DATA'		//-- Campo data de referencia do lancamento
cQuantc := cAlias+'->'+Right(cAlias,2)+'_QUANTC'	//-- Campo quantidade de horas calculadas
cQuanti := cAlias+'->'+Right(cAlias,2)+'_QUANTI'	//-- Campo quantidade de horas informadas

dbSelectArea(cAlias)
If dbSeek(fFilFunc(cAlias)+SRA->RA_MAT)

	Do While &cFil + &cMat == SRA->RA_FILIAL + SRA->RA_MAT
	    //-- Desconsidera Apontamentos fora do Periodo solicitado
	    If &cData < dPerIni .Or. &cData > dPerFim
			(cAlias)->( dbSkip() )
			Loop
		Endif
    
		cEvento := If(Empty(&cPDI),&cPD,&cPDI)

		If ( nPos := aScan( aTabCalend, {|x| x[1] == &cData .and. x[4] == '1E' } ) ) > 0
			//-- Carrega tabela de Horas Extras / Horas Extras Noturnas
			IF ( lRet := GetTabExtra( @aCodigos , SRA->RA_FILIAL , aTabCalend[ nPos , 14 ] , .F. , .T. ) )
				//-- Verifica se Evento eh de hora extra
				If Ascan(aCodigos,{|x| x[4] == cEvento}) ==0
				   (cAlias)->( dbSkip() )
				   Loop
				Endif   
			Else
			   Exit
			EndIF	
		Endif
	

	    //-- Obtem as horas do Evento
		nQuant := If(Empty(&cPDI),&cQuantc,&cQuanti)
                                          
		
        //-- Acumula Total de Horas de Todos os Eventos
		nHoras := SomaHoras(nHoras, nQuant)
        
        //-- Acrescenta o Eventos ou Acumula horas do Evento para Array GERAL
		If Len(aColuna) > 0 .And. (nPos := Ascan(aColuna, { |x| x[1] == cEvento })) > 0
			aColuna[nPos,3] := SomaHoras(aColuna[nPos,3], nQuant)
		Else
			Aadd(aColuna, { cEvento, DescPDPon(cEvento), nQuant, 0 })
		Endif

		(cAlias)->( dbSkip() )
	Enddo
    
Endif

//-- Retorna o Total de Horas do Periodo
Return nHoras 



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fHrsAbon ³ Autor ³ Alexsandro Pereira    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fHrsAbon(dPerIni, dPerfim, aAbon)

Local nHrsAbon := 0
Local nX       := 0
Local nY	   := 0
Local aAbonos  := {}
Local dData    := dPerIni

For nX := 1 To (dPerFim-dPerIni)

	nHrsAbon := SomaHoras(nHrsAbon,fAbonos(dData,,,@aAbonos))

	For nY := 1 To Len(aAbonos)
		If (nPos := Ascan(aAbon, { |x| x[1] == aAbonos[nY,1] })) > 0
			aAbon[nPos,3] := SomaHoras(aAbonos[nY,2],aAbon[nPos,3])
		Else
			Aadd(aAbon, { aAbonos[nY,1],  DescAbono(aAbonos[nY,1],'C'), aAbonos[nY,2], 0 })
		Endif

	Next nY

	//-- limpa variavel para adicionar proximo abono
	aAbonos := {}

	dData ++
Next nX

//-- Calcula Percentual das Horas do Evento em relacao ao total de horas apontadas 
fCalcPerc(aAbon,nHrsAbon)

Return nHrsAbon


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ Monta_Per³ Autor ³ Alexsandro Pereira    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function Monta_Per(dDataIni,dDataFim)

Local aPeriodos := {}
Local dPerIni   := Ctod('  /  /  ')
Local dPerFim   := Ctod('  /  /  ')
Local dData     := dDataIni

While .T.
	If !PerAponta(@dPerIni,@dPerFim,dData)
		HELP(' ',1,'PERNCAD')
		Return Nil
	Endif

	Aadd(aPeriodos, { dPerIni, dPerFim, Max(dPerIni,dDataIni), Min(dPerFim,dDataFim) })
	If dDataFim > dPerFim
		dData := dPerFim + 1
		Else
		Exit
	Endif

Enddo
Return aPeriodos



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fTot      ³ Autor ³ Mauricio MR           ³ Data ³04/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Totaliza os Acumuladores de Emp,Fil,CC e Turno              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fTot(aCodigos,aCodTot)                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³aCodigos --> Array com os eventos a serem totalizados       ³±±
±±³          ³aCodTot  --> Array com os SubArrays: Emp,Fil,CC e Turno     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fTot(aCodigos,aCodTot)

Local naCodigos :=Len(aCodigos)
Local naCodTot  :=Len(aCodTot)
Local nX		:=0 
Local nY		:=0

For nX := 1 To naCodigos
    For nY := 1 To naCodTot

		If (nPos := Ascan(aCodTot[nY], { |x| x[1] == aCodigos[nX,1] })) > 0
			aCodTot[nY,nPos,3] := SomaHoras(aCodTot[nY,nPos,3],aCodigos[nX,3])
		Else
			Aadd(aCodTot[nY], { aCodigos[nX,1], aCodigos[nX,2], aCodigos[nX,3], 0 })
		Endif
    Next nY
Next nX 

//Calcula Percentual de Cada Totalizador
aEval(aCodTot, { |aTotal| fCalcPerc(aTotal)})

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ fCalcPerc³ Autor ³ Mauricio MR           ³ Data ³ 05/04/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Percentual de Horas de um Evento em Relacao ao to- ³±±
±±³          ³ tal geral.                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ fCalcPerc(aColuna)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ aColuna  --> Array de Eventos e Horas                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ nHoras   --> Total de Horas                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fCalcPerc(aColuna,nHoras)

Local nX      := 0

nHoras  := If(nHoras==Nil,0,nHoras)


//---- Calcula o Total GERAL de Horas 
If Empty(nHoras)
	aEval(aColuna, { |y| nHoras := SomaHoras(nHoras,y[3]) })
Endif

//-- Calcula o percentual de cada item em relacao ao total
aEval(aColuna, { |y| y[4]:=(fConvHr(y[3],'D') / fConvHr(nHoras,'D')) * 100 })

Return nHoras




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fTotLinPer³ Autor ³ Mauricio MR           ³ Data ³04/04/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Calcula Totais de um Periodo                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fTotLinPer(aTot,nHrsPrev,nHrsReal,nHrsAdic,nHrsnTra,        ³±±
±±³          ³        nHrsAbon,dPeriodo,nPReal, nPAdic, nPnTra, nPAbo)    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³aTot  --> Array com os Acumuladores do Periodo              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fTotLinPer(aTot,nHrsPrev,nHrsReal,nHrsAdic,nHrsnTra,nHrsAbon,dPeriodo,nPReal, nPAdic, nPnTra, nPAbo)

//-- aTotal
//-- [n,01] Periodo
//-- [n,02] Horas previstas
//-- [n,03] horas realizadas
//-- [n,04] percentual realizado
//-- [n,05] Horas adicionais
//-- [n,06] percentual adicional
//-- [n,07] Horas nao trabalhadas
//-- [n,08] Percentual horas nao trabalhadas
//-- [n,09] Horas abonadas
//-- [n,10] Percentual horas abonadas
Local nX:=0
Local anTot:=Len(aTot)

For nX:=1 To anTot
	//-- Calcula Totalizador de um Periodo
	If Len(aTot[nX]) > 0 .And. (nPos := Ascan(aTot[nX], { |x| x[1] == StrZero(Month(dPeriodo),2)+'/'+Transf(Year(dPeriodo),'9999') })) > 0
		aTot[nX,nPos,02] := SomaHoras(aTot[nX,nPos,02], nHrsPrev)
		aTot[nX,nPos,03] := SomaHoras(aTot[nX,nPos,03], nHrsReal)
		aTot[nX,nPos,04] := (fConvHr(aTot[nX,nPos,03],'D') / fConvHr(aTot[nX,nPos,02],'D')) * 100
		aTot[nX,nPos,05] := SomaHoras(aTot[nX,nPos,05], nHrsAdic)
		aTot[nX,nPos,06] := (fConvHr(aTot[nX,nPos,05],'D') / fConvHr(aTot[nX,nPos,02],'D')) * 100
		aTot[nX,nPos,07] := SomaHoras(aTot[nX,nPos,07], nHrsnTra)
		aTot[nX,nPos,08] := (fConvHr(aTot[nX,nPos,07],'D') / fConvHr(aTot[nX,nPos,02],'D')) * 100
		aTot[nX,nPos,09] := SomaHoras(aTot[nX,nPos,09], nHrsAbon)
		aTot[nX,nPos,10] := (fConvHr(aTot[nX,nPos,09],'D') / fConvHr(aTot[nX,nPos,07],'D')) * 100
	Else
		Aadd(aTot[nX], { StrZero(Month(dPeriodo),2)+'/'+Transf(Year(dPeriodo),'9999'),;
		nHrsPrev,nHrsReal, nPReal, nHrsAdic, nPAdic, nHrsnTra, nPnTra, nHrsAbon, nPAbo })
	Endif
Next nX	
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³fTrataSX1 ³ Autor ³ Mauricio MR           ³ Data ³14/12/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Altera Perguntas SX1                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³fTrataSX1()												  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Gen‚rico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±*/
Static Function fTrataSX1(cPerg) 
Local aRegs	  	:= {} 
Local cCntAte01 := cCntAte02:= 	cCntAte03   := ''
Local cCnt01  	:= cCnt02  	:=  cCnt03  	:= ''
Local nTam    	:= 0.00  

//-- Procura pelo Grupo de Perguntas e Item   

//-- Obtem os Conteudos de Data Ate e Data Ate para gerar valores consistentes    
//-- Data Ate
If SX1->( dbSeek(cPerg+'15') ) 
   
   cCntAte01:=SX1->(X1_CNT01)
   cCntAte01:=if( Empty( CTOD( cCntAte01 ) ), "'01/12/02'", cCntAte01 )
   
   cCntAte02:=SX1->(X1_CNT02)                          
   cCntAte02:=if( Empty( CTOD( cCntAte02 ) ), "'01/12/02'", cCntAte02 )
   
   cCntAte03:=SX1->(X1_CNT03)                             
   cCntAte03:=if( Empty( CTOD( cCntAte03 ) ), "'01/12/02'", cCntAte03 )
   
Endif
 
//-- Data De 
If SX1->( dbSeek(cPerg+'14') ) 
   
   nTam:= Len(SX1->X1_PERGUNT)
   
   cCnt01:=SX1->(X1_CNT01)
   cCnt01:=if( Empty( CTOD( cCnt01 ) ), cCntAte01, cCnt01 )
   
   cCnt02:=SX1->(X1_CNT02)                          
   cCnt02:=if( Empty( CTOD( cCnt02 ) ), cCntAte02, cCnt02 )
   
   cCnt03:=SX1->(X1_CNT03)                             
   cCnt03:=if( Empty( CTOD( cCnt03 ) ), cCntAte02, cCnt03 )
   
Endif  

//-- Se a pergunta for Eliminada recadastra a mesma
IF fDelSx1  (cPerg ,PADR("Data De ?",nTam),"14","14")  
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³            Grupo  Ordem Pergunta Portugues    	Pergunta Espanhol  	  		Pergunta Ingles 				Variavel Tipo 	Tamanho 	Decimal 	Presel  GSC 	Valid                    Var01    	Def01          	DefSPA1    	DefEng1  	Cnt01     Var02  		Def02    		DefSpa2		DefEng2	Cnt02  	Var03 		Def03   	DefSpa3 DefEng3  Cnt03  	Var04  		Def04     	DefSpa4    	DefEng4 Cnt04  			Var05  		Def05	 	DefSpa5 DefEng5 Cnt05   XF3     GrgSxg   	cPyme	 	aHelpPor	 aHelpEng	 aHelpSpa    cHelp        ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	
	aAdd(aRegs,{cPerg ,"14"  ,PADR("Data  De ?",nTam),	PADR("¨De Fecha ?",	nTam),	PADR("From Date ?",nTam)   		,"mv_chE","D"	,8			,0			,0		,"G"	,"NAOVAZIO"				,"MV_PAR14"	,""				,""			,""			,cCnt01	,""				,""				,""			,""		,cCnt02	,""			,""			,""		,""		,cCnt03,	""			,""			,""			,""		,""				,""			,""			,""		,""		,""		,""		,""			,""			,{}			,{}			,{}			,''			})
	
	ValidPerg(aRegs,cPerg )
Endif
                   
Return 
